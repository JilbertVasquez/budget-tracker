name: Build and Push Budget Tracker App

on:
  release:
    types: [published]
  push:
    branches: [main]

env:
  ACR_REGISTRY: jlbrtvsqzapps.azurecr.io
  IMAGE_NAME: budgettracker

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest
          package_json_file: ./budget-tracker-frontend/package.json

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
          cache-dependency-path: ./budget-tracker-frontend/package-lock.json

      - name: Set Build Environment Configuration
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "CONFIGURATION=production" >> $GITHUB_ENV
          else
            echo "CONFIGURATION=development" >> $GITHUB_ENV
            echo "TAG=development" >> $GITHUB_ENV
          fi

      - name: Build SPA Frontend
        working-directory: ./budget-tracker-frontend
        run: |
          pnpm install --no-frozen-lockfile
          echo "Building $CONFIGURATION version"
          pnpm ng build --configuration $CONFIGURATION

      - name: Extract Release Version
        id: extract_version
        if: github.event_name == 'release'
        run: |
          RELEASE_VERSION=${GITHUB_REF##*/}
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          echo "TAG=$RELEASE_VERSION" >> $GITHUB_ENV

      - name: Azure Login (ACR)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker Login to ACR
        run: az acr login --name jlbrtvsqzapps

      - name: Build and Push Docker Image to ACR
        run: |
          docker build -t $IMAGE_NAME:$TAG -f ./budget-tracker-client/Dockerfile .
          docker tag $IMAGE_NAME:$TAG $ACR_REGISTRY/$IMAGE_NAME:$TAG
          docker push $ACR_REGISTRY/$IMAGE_NAME:$TAG

          if [[ "$TAG" != "development" ]]; then
            docker tag $IMAGE_NAME:$TAG $ACR_REGISTRY/$IMAGE_NAME:latest
            docker push $ACR_REGISTRY/$IMAGE_NAME:latest
          fi